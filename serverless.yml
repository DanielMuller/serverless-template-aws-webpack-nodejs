service: test-updates
# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3.24.1"

custom:
  stage: ${file(stages/${self:provider.stage}.yml)}
  # Add custom variables here. You can re-use variables defined in the stage yml
  # customStageVar: ${self:custom.stage.customStageVar}
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
  accountId: ${file(lib/aws.js):accountId}

plugins:
  - serverless-deployment-bucket
  - serverless-webpack
package:
  individually: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, self:custom.stage.region}
  profile: ${self:custom.stage.profile}
  memorySize: ${self:custom.stage.lambda.memorySize, '128'}
  timeout: ${self:custom.stage.lambda.timeout, '10'}
  logRetentionInDays: ${self:custom.stage.lambda.logRetention, 1}
  # iamRoleStatements: ${file(config/iamRoleStatements.yml)}
  deploymentBucket:
    name: com.serverless.${self:custom.accountId}.${self:provider.region}.deploys
    blockPublicAccess: true
  environment:
    SERVERLESS_REGION: ${self:provider.region}

functions: ${file(lib/config.js):functions}
resources:
  Resources: ${file(lib/config.js):resources}
  Outputs: ${file(lib/config.js):outputs}
